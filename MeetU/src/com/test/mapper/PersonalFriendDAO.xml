<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.personal.IPersonalFriendDAO">


<!-- 친구리스트 -->
	<select id="friendList" resultType="com.test.personal.PersonalFriendDTO">
		SELECT M.LMEMBER_ID AS FRIENDID, M.MEMBER_NAME AS FRIENDNAME, MF.MBPROFILE_URL AS FRIENDPIC, F.FRIEND_ID AS FRIENDNO
		FROM MU_MEMBER M LEFT OUTER JOIN MBPROFILE MF
		ON M.LMEMBER_ID = MF.LMEMBER_ID
		
		JOIN FRIEND F
    	ON M.LMEMBER_ID = F.LIMEMBER_ID
		
		WHERE M.LMEMBER_ID IN ( SELECT LIMEMBER_ID
		                        FROM FRIEND
		                        WHERE LUMEMBER_ID = #{hostId}
                            AND FRSTATUS_ID = 2 
                            UNION
		                        SELECT LUMEMBER_ID
		                        FROM FRIEND
		                        WHERE LIMEMBER_ID = #{hostId}
		                        AND FRSTATUS_ID = 2)
       	AND M.LMEMBER_ID NOT IN ( SELECT LUMEMBER_ID FROM BLACKMB WHERE LIMEMBER_ID = #{hostId} )                      
       	AND M.LMEMBER_ID NOT IN ( SELECT LIMEMBER_ID FROM BLACKMB WHERE LUMEMBER_ID = #{hostId} )
	</select>


<!-- 블랙리스트 -->
	<select id="blackList" resultType="com.test.personal.PersonalFriendDTO">
		SELECT BLACKMB_ID AS BLACKID, B.BLACKMB_REASON AS BLACKCONTENT
		     , (SELECT MEMBER_NAME FROM MU_MEMBER WHERE LMEMBER_ID = B.LUMEMBER_ID) AS BLACKNAME
		     , (SELECT MBPROFILE_URL FROM MBPROFILE WHERE LMEMBER_ID = B.LUMEMBER_ID) AS BLACKPIC
		FROM BLACKMB B
		WHERE LIMEMBER_ID = #{hostId}

		<!-- SELECT B.BLACKMB_ID AS BLACKID, MF.MBPROFILE_URL AS BLACKPIC
		     , M.MEMBER_NAME AS BLACKNAME, B.BLACKMB_REASON AS BLACKCONTENT
		FROM BLACKMB B JOIN MBPROFILE MF
		ON B.LUMEMBER_ID = MF.LMEMBER_ID
		JOIN MU_MEMBER M
		ON M.LMEMBER_ID = MF.LMEMBER_ID
		WHERE LIMEMBER_ID = #{hostId} -->
	</select>
	
	
<!-- 친구신청중 -->
	<select id="friendSend" resultType="com.test.personal.PersonalFriendDTO">
		SELECT FRIEND_ID AS FRIENDNO, LUMEMBER_ID AS friendId
			 , (SELECT MEMBER_NAME FROM MU_MEMBER WHERE LMEMBER_ID = F.LUMEMBER_ID) AS FRIENDNAME
		     , (SELECT MBPROFILE_URL FROM MBPROFILE WHERE LMEMBER_ID = F.LUMEMBER_ID) AS FRIENDPIC
		     , FRSTATUS_ID AS sendState
		FROM FRIEND F
		WHERE LIMEMBER_ID = #{hostId}
		AND FRSTATUS_ID IN (1, 3)
	</select>


<!-- 친구신청받음 -->
	<select id="friendReceive" resultType="com.test.personal.PersonalFriendDTO">
		SELECT FRIEND_ID AS FRIENDNO, LIMEMBER_ID AS friendId
			 , (SELECT MEMBER_NAME FROM MU_MEMBER WHERE LMEMBER_ID = F.LIMEMBER_ID) AS FRIENDNAME
     		 , (SELECT MBPROFILE_URL FROM MBPROFILE WHERE LMEMBER_ID = F.LIMEMBER_ID) AS FRIENDPIC
		FROM FRIEND F
		WHERE LUMEMBER_ID = #{hostId}
		AND FRSTATUS_ID = 1
		AND NOT LIMEMBER_ID IN (SELECT LUMEMBER_ID FROM BLACKMB WHERE LIMEMBER_ID = F.LIMEMBER_ID)
	</select>


<!-- 친구신청취소(본인) -->
	<delete id="friendnoSend">
		DELETE
		FROM FRIEND
		WHERE FRIEND_ID = #{friendNum}
	</delete>
	
	
<!-- 친구신청거절 -->
	<update id="friendnoReceive">
		UPDATE FRIEND
		SET FRSTATUS_ID = 3
		WHERE FRIEND_ID = #{friendNum}
	</update>


<!-- 친구삭제 -->
	<update id="friendRemove">
		UPDATE FRIEND
		SET FRSTATUS_ID = 4
		WHERE FRIEND_ID = #{friendNum}
	</update>
	
	
<!-- 친구추가(승낙) -->
	<update id="friendAdd">
		UPDATE FRIEND
		SET FRSTATUS_ID = 2
		WHERE FRIEND_ID = #{friendNum} 
	</update>
	
	
<!-- 블랙리스트삭제 -->	
	<delete id="blackRemove">
		DELETE
		FROM BLACKMB
		WHERE BLACKMB_ID = #{blackNum}
	</delete>


<!-- 블랙리스트추가 -->
	<insert id="blackAdd">
		INSERT INTO BLACKMB (BLACKMB_ID, LIMEMBER_ID, LUMEMBER_ID, BLACKMB_REASON)
		VALUES (BLACKMBSEQ.NEXTVAL, #{hostId}, #{friendNum}, ' ')	
	</insert>


	
</mapper>